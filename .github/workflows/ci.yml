name: CI Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout代码
        uses: actions/checkout@v4
      
      - name: 设置Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: 代码检查
        run: |
          pip install flake8
          # 停止构建如果有Python语法错误或未定义名称
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # 警告但不停止构建
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: 测试导入
        run: |
          python -c "from core import *; print('✓ 所有核心模块导入成功')"
      
      - name: 生成测试日志
        run: |
          python tools/test_log_generator.py -n 100 -o test.log
      
      - name: 测试批量处理
        run: |
          timeout 30 python main.py --batch test.log || true
  
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout代码
        uses: actions/checkout@v4
      
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: 安装linting工具
        run: |
          pip install flake8 pylint black isort
      
      - name: 运行Black格式检查
        run: |
          black --check . || echo "⚠️ 代码格式建议优化"
      
      - name: 运行isort检查
        run: |
          isort --check-only . || echo "⚠️ import顺序建议优化"

