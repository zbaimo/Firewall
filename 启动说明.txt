====================================================
  配置已修复 - 现在可以启动了
====================================================

修复内容:
  ✓ 移除了过时的 version 声明
  ✓ 修复了 network_mode 和 networks 冲突
  ✓ Redis 改为使用 host 网络模式
  ✓ Redis 配置为只监听 127.0.0.1（更安全）

====================================================
  启动命令
====================================================

在项目目录执行:

cd /root/data/firewall
docker-compose -f docker-compose.deploy.yml up -d

====================================================
  检查服务状态
====================================================

# 查看服务状态
docker-compose -f docker-compose.deploy.yml ps

# 查看日志
docker-compose -f docker-compose.deploy.yml logs -f

# 只看防火墙日志
docker-compose -f docker-compose.deploy.yml logs -f firewall

# 只看Redis日志
docker-compose -f docker-compose.deploy.yml logs -f redis

====================================================
  访问Web界面
====================================================

因为使用 host 网络模式，服务运行在主机网络上

访问地址:
  http://主机IP:8080
  或
  http://localhost:8080

默认登录:
  用户名: admin
  密码: admin

首次登录会强制修改密码

====================================================
  重要提示
====================================================

1. host 网络模式优势:
   ✓ 可以直接操作主机 iptables
   ✓ 性能最佳（无网络转换开销）
   ✓ 端口直接暴露在主机上

2. 访问端口:
   - Web管理后台: 8080
   - Redis: 127.0.0.1:6379（仅本地可访问）

3. 防火墙规则:
   如果主机有防火墙，需要开放8080端口:
   
   ufw allow 8080/tcp
   或
   iptables -A INPUT -p tcp --dport 8080 -j ACCEPT

====================================================
  故障排查
====================================================

如果启动失败:

1. 检查端口是否被占用:
   netstat -tunlp | grep 8080
   netstat -tunlp | grep 6379

2. 检查配置文件:
   ls -la config.yaml
   
3. 检查日志目录:
   ls -la /root/data/Nginx

4. 查看详细错误:
   docker-compose -f docker-compose.deploy.yml logs

====================================================

现在执行: docker-compose -f docker-compose.deploy.yml up -d

====================================================


